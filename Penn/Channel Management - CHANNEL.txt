@@ DEPENDENCIES: CORE, PennMUSH
@@ This doesn't work on Rhost. Don't even try.

th u(NEWCOBJ,Channel Management System <CHANNEL>,channel,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)
th u(NEWCOBJ,Mogrifier Object Parent <MOP>,mop,u(cobj,channel),,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)
th u(NEWCOBJ,Muzzle Database <MUZZLE>,muzzle,u(cobj,channel),,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)

&SYSTEM`SWITCHES [u(cobj,channel)]=setunion(setunion(v(SWITCHES`%q<sysname>`PLAYER),v(SWITCHES`%q<sysname>`PLAYER`EXTRA),|,|),if(u(isadmin,%#),setunion(v(SWITCHES`%q<sysname>`ADMIN),v(SWITCHES`%q<sysname>`ADMIN`EXTRA),|,|)),|,|)

&CMD`+CHANNEL`PENNMUSH [u(cobj,channel)]=$^(?s)(?\:\+)?(?\:channel|chan|channels)(?\:/(\S+)?)?(?\: +(.+?))?(?\:/(.*?))?(?\:=(.*))?$:@attach %!/CMD`+CHANNEL`MAIN
@set [u(cobj,channel)]/CMD`+CHANNEL`PENNMUSH=regexp
&CMD`+CHANNEL`RHOSTMUSH [u(cobj,channel)]=$^(?s)(?\:\+)?(?\:channel|chan|channels)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:/(.*?))?(?\:=(.*))?$:@attach %!/CMD`+CHANNEL`MAIN
@set [u(cobj,channel)]/CMD`+CHANNEL`RHOSTMUSH=regexp
&CMD`+CHANNEL`MAIN [u(cobj,channel)]=th setq(sysname,CHANNEL);@attach %!/INC`GETSWITCH=%1;@include %!/INC`CHANNEL`[u(strfirstof,%q<switch>,MAIN)]=%2,%3,%4
@set [u(cobj,channel)]/CMD`+CHANNEL`[u(choosegame,RHOSTMUSH,PENNMUSH)]=no_command

&CMD`+SPEAKER [u(cobj,channel)]=$^(?s)(?\:\+)(?\:speaker)(?\: +(.+?))?(?\:/(.*?))?(?\:=(.*))?$:th setq(sysname,CHANNEL);@attach %!/INC`CHANNEL`SPEAKER=%1,%2,%3
@set [u(cobj,channel)]/CMD`+SPEAKER=regexp

&CMD`STAFFTAG [u(Cobj,channel)]=$+stafftag *:@attach %!/CMD`+CHANNEL`MAIN=+channel/stafftag %0,stafftag,%0

&SYSTEM`NAME [u(cobj,channel)]=u(strfirstof,%q<sysname>,CHANNEL)
&SYSTEm`COLORS [u(cobj,channel)]=CHANNEL
&SYSTEM`OPTIONS [u(cobj,channel)]=CHANNEL

&SWITCHES`CHANNEL`PLAYER [u(cobj,channel)]=RECALL|FACHEAD|OPTIONS|CODENAME|CUSTCOLORS|COLORS
&SWITCHES`CHANNEL`ADMIN [u(cobj,channel)]=ADD|DELETE|STAFFTAG|RENAME|CONFIG||MOGCONF|INIT|SPEAKER

&INC`CHANNEL`OPTIONS [u(cobj,channel)]=@attach %!/INC`OPTIONS=%0,%2,CHANNELS

&OPTION`OPTIONS [u(cobj,channel)]=NAMELINK|OTHERLINK|QUOTES|SPEECH

&OPTION`NAMELINK [u(Cobj,channel)]=Should speaker names be clickable on channels?
&OPTION`NAMELINK`DEFAULT [u(Cobj,channel)]=1
&OPTION`NAMELINK`VALID [u(cobj,channel)]=BOOL
&OPTION`CHANNELS`NAMELINk`CUSTOM [u(cobj,ancestor_player)]=1

&OPTION`OTHERLINK [u(Cobj,channel)]=Should other names be clickable on channels?
&OPTION`OTHERLINK`DEFAULT [u(Cobj,channel)]=1
&OPTION`OTHERLINK`VALID [u(cobj,channel)]=BOOL
&OPTION`CHANNELS`OTHERLINK`CUSTOM [u(cobj,ancestor_player)]=1

&OPTION`QUOTES [u(Cobj,channel)]=Color the quotations of speech with this. "Blah"
&OPTION`QUOTES`DEFAULT [u(Cobj,channel)]=
&OPTION`QUOTES`VALID [u(cobj,channel)]=COLOR

&OPTION`SPEECH [u(Cobj,channel)]=Color text in quotations. "Blah"
&OPTION`SPEECH`DEFAULT [u(Cobj,channel)]=
&OPTION`SPEECH`VALID [u(cobj,channel)]=COLOR

&INC`CHANNEL`CONFIG [u(cobj,channel)]=@attach %!/INC`CONFIG

&INC`CHANNEL`COLORS [u(cobj,channel)]=@attach %!/INC`COLOR=%0,%1,CHANNELS

&INC`CHANNEL`CUSTCOLORS [u(cobj,channel)]=th u(setq,channels,u(filter,RIGHTMOG,objeval(%#,channels(|)),|,|,num(u(cobj,mop))));@switch/inline strlen(%0)=0,{@attach %!/INC`CHANNEL`CUSTCOLORS`LIST},{@attach %!/INC`CHANNEL`CUSTCOLORS`SET}

&FIL`RIGHTMOG [u(cobj,channel)]=strmatch(parent(cmogrifier(%0)),%1)

&INC`CHANNEL`CUSTCOLORS`LIST [u(cobj,channel)]=@pemit %#=u(header,Channel Color);@pemit %#=ansi(u(color,%#,CHANNELS,COLUMN_NAMES),align(34 10,Channel,Color));@pemit %#=u(separator);@dolist/inline/delimit | %q<channels>={@pemit %#=align(34 10,%i0,u(CHANNELCOLOR,%#,cmogrifier(%i0)))};@pemit %#=u(footer)

&INC`CHANNEL`CUSTCOLORS`SET [u(cobj,channel)]=@attach %!/INC`PARTIAL=%0,stripansi(%q<channels>),|,channel,channel;@switch/inline strlen(%1)=0,{@attach %!/INC`MSG=CHANNEL %q<channel> restored to default.;@attach %!/WIPE=u(strfirstof,u(accid,%#),%#),CUSTCOLOR`CHANNEL`[cmogrifier(%q<channel>)]},{@attach %!/INC`VALID`COLOR=%1;th u(attrib_set,u(strfirstof,u(accid,%#),%#),CUSTCOLOR`CHANNEL`[cmogrifier(%q<channel>)],%q<value>);@attach %!/INC`MSG=u(setr,msg,CHANNEL %q<channel> Set to: %q<value>)}

&INC`CHANNEL`MAIN [u(cobj,channel)]=@select/inline strlen(%0)=0,{@pemit %#=u(header,mudname() Channel Status);@pemit %#=ansi(u(color,%#,COLUMN_NAMES),align(3 20 9 41,On?,Name,Users,Description));@pemit %#=u(separator);@dolist/inline/delimit | [objeval(%#,channels(|))]={@pemit %#=align(3 20 9 41,rjust(cstatus(%i0,%#),3),ljust(u(pueblize,%i0,+channel [stripansi(%i0)]),31),rjust(words(objeval(%#,cwho(%i0,on))),3)/[words(objeval(%#,cwho(%i0,all)))],cdesc(%i0))};@pemit %#=u(footer)},{@attach %!/INC`PARTIAL=%0,objeval(%#,channels(|)),|,channel,channel;@pemit %#=u(header,Channel Info for: %q<channel>);@stop not(strmatch(parent(u(setr,mog,cmogrifier(%q<channel>))),num(u(cobj,mop))))=@attach %!/INC`MSG=ERROR: Channel is not initialized. Please use +channel/init %q<channel>;@pemit %#=OWNER: [u(getmoniker,cowner(%q<channel>))]%RBUFFER: [cbuffer(%q<channel>)] - [cmsgs(%q<channel>)] Messages stored!%RFLAGS: [clflags(%q<channel>)]%RDESC: [cdesc(%q<channel>)];@pemit %#=ansi(hg,ONLINE USERS:) [words(objeval(%#,cwho(%q<channel>,on)))] - [u(itemize,iter(objeval(%#,cwho(%q<channel>,on)),if(u(valnum,objeval(%#,conn(%i0))),u(getmoniker,%i0),ansi(hx,name(%i0)))[if(strlen(clflags(%q<channel>,%i0)),\([clflags(%q<channel>,%i0)]\))],%b,|),|,and,\,)]%R;@pemit %#=ansi(hx,OFFLINE USERS:) [words(objeval(%#,cwho(%q<channel>,off)))] - [u(itemize,iter(objeval(%#,cwho(%q<channel>,off)),u(getmoniker,%i0)[if(strlen(clflags(%q<channel>,%i0)),\([clflags(%q<channel>,%i0)]\))],%b,|),|,and,\,)];@pemit %#=u(footer)}

&INC`CHANNEL`RECALL [u(cobj,channel)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: No channel entered to recall.;@attach %!/INC`PARTIAL=%0,objeval(%#,channels(|)),|,channel,channel;@force/inline %#=@chan/recall %q<channel>=sub(secs(),convtime(get(%#/lastlogout)))s

&INC`CHANNEL`ADD [u(cobj,channel)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: Channel name empty!;@check valid(channel,%0)=@attach %!/INC`MSG=ERROR: Channel name was not accepted. A channel of that name already exists or the entered name was too long or had unacceptable characters.;@select/inline strlen(%1)=>0,{@stop strmatch(ansi(%2,test),u(setr,error,#-*))=@attach %!/INC`MSG=ERROR: '%2' was not accepted by ansi()! Error returned: %q<error>};@channel/add if(strlen(%2),ansi(%2,%0),%0)=u(conf,DEFAULT_PRIVS);@attach %!/INC`CHANNEL`INIT;@attach %!/INC`MSG=Channel [if(strlen(%2),ansi(%2,%0),%0)] created!;@attach %!/INC`MSG`CHAN=Created the [if(strlen(%2),ansi(%2,%0),%0)] channel!

&CONFIG`DEFAULT_PRIVS [u(cobj,channel)]=Channel privileges for PennMUSH used for newly created channels. This isn't validated so please don't screw it up.
&CONFIG`DEFAULT_PRIVS`DEFAULT [u(cobj,channel)]=PQ
&CONFIG`DEFAULT_PRIVS`VALID [u(cobj,channel)]=WORD

&INC`CHANNEL`INIT [u(cobj,channel)]=@check match(stripansi(objeval(%#,channels(|))),%0,|)=@attach %!/INC`MSG=ERROR: Channel not found.;@select/inline strmatch(cmogrifier(%0),u(cobj,mop))=0,{@select/inline isdbref(u(setr,mog,u(find_in,u(cobj,mop),MOG-[stripansi(%0)])))=1,{@channel/mogrifier %0=%q<mog>},0,{@tel u(setr,mog,create(MOG-[stripansi(%0)]))=u(cobj,mop);@parent %q<mog>=u(cobj,mop);@set %q<mog>=WIZARD;@channel/mogrifier %0=%q<mog>;@select/inline %q<switch>=INIT,{@attach %!/INC`MSG=Channel initiation of '%0' complete!}}},1,{@select/inline %q<switch>=INIT,{@attach %!/INC`MSG=Channel initiation of '%0' unnecessary!}}

&INC`CHANNEL`TARGET [u(cobj,channel)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: No channel entered to target!;@attach %!/INC`PARTIAL=%0,stripansi(u(setr,allchan,objeval(%#,channels(|)))),|,channel,channel;@check isdbref(u(setr,mog,cmogrifier(%q<channel>)))=@attach %!/INC`MSG=ERROR: Must use +channel/init on that channel first if it is not a temporary channel.;th u(setq,name,extract(%q<allchan>,match(%q<allchan>,%q<channel>,|),1,|))

&INC`CHANNEL`DELETE [u(cobj,channel)]=@attach %!/INC`CHANNEL`TARGET;@attach %!/INC`VERIFY={[ansi(hr,WARNING:)] This will delete channel %q<name>. Are you sure? Enter the same command within ten seconds to continue!},CHANNEL DELETE %q<channel>;@select/inline isdbref(u(setr,mog,cmogrifier(%q<channel>)))=1,{@attach %!/DELETE=%q<mog>};@channel/delete %q<channel>;@attach %!/INC`MSG`CHAN=Deleted Channel %q<channel>

&INC`CHANNEL`RENAME [u(cobj,channel)]=@attach %!/INC`CHANNEL`TARGET;@check cor(u(isadmin,%#),testlock(clock(%q<channel>/Mod),%#))=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%2)=@attach %!/INC`MSG=ERROR: New Name field Empty.;@check valid(channel,stripansi(%2),%q<channel>)=@attach %!/INC`MSG=ERROR: Either a channel by that name already exists, or the entered new name wasn't an acceptable channel name.;@channel/name %q<channel>=trim(%2);@attach %!/INC`MSG=You have renamed channel %q<channel> to: [trim(%2)]!;@attach %!/INC`MSG`CHAN=Channel %q<channel> renamed to: [trim(%2)]!

@@ &INC`CHANNEL`CONFIG [u(cobj,channel)]=@attach %!/INC`PARTIAL=%0,stripansi(objeval(%#,channels(|))),|,channel,channel;@check cor(u(isadmin,%#),testlock(clock(%q<channel>/Mod),%#))=@attach %!/INC`MSG=ERROR: Permission denied.;@stop not(strmatch(parent(u(setr,mog,cmogrifier(%q<channel>))),num(u(cobj,mop))))=@attach %!/INC`MSG=ERROR: Channel is not initialized. Please use +channel/init %q<channel>;@attach %!/INC`PARTIAL=%2,CODENAME,|,parameter,parameter;@select/inline strlen(%2)=0,{&CONF`%q<parameter> %q<mog>;@attach %!/INC`MSG=You cleared Channel %q<channel>'s %q<parameter> Setting.},{@attach %!/INC`CHANNEL`CONFIG`%q<parameter>;&CONF`%q<parameter> %q<mog>=%q<entry>;@attach %!/INC`MSG=You set Channel %q<channel>'s %q<parameter> Setting to: %q<entry>};@attach %!/INC`MSG`CHAN=[if(strlen(%2),set,cleared)] the %q<channel> Channel's %q<parameter> Setting[if(strlen(%2),%bto %2!,.)]

&INC`CHANNEL`FACHEAD [u(cobj,channel)]=@check elock(u(game_config,CHANNELS,FACHEAD_KEY)/Basic,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CHANNEL`TARGET;@select/inline t(match(get(%q<mog>/VAR`FACHEAD),%:))=1,{&VAR`FACHEAD %q<mog>=setdiff(get(%q<mog>/VAR`FACHEAD),%:);@attach %!/INC`MSG=You will no longer have a Fachead tag on %q<channel>},0,{&VAR`FACHEAD %q<mog>=setunion(get(%q<mog>/VAR`FACHEAD),%:);@attach %!/INC`MSG=You will now have a Fachead tag on %q<channel>}

&INC`CHANNEL`SPEAKER [u(cobj,channel)]=@attach %!/INC`CHANNEL`TARGET;@attach %!/INC`CHECKPC=%1,1;@select/inline %2=0,{@attach %!/INC`MSG`CHAN=Revoked %q<channel> Speaker authority for %q<t1name>.;@attach %!/INC`MSG`NOTICE=Your speaker authority for %q<channel> was revoked.,%q<t1>;@attach %!/INC`MSG=Revoked %q<t1name>'s %q<channel> Speaker authority.;@attach %!/WIPE=%q<t1>,D`SPEAKER`%q<mog>},{@attach %!/INC`VALID`DURATION=%2;@attach %!/INC`MSG`NOTICE=You now have Speaker Authority on %q<channel> for [etime(%q<value>)],%q<t1>;@attach %!/INC`MSG=Granted %q<t1name> Speaker authority on %q<channel> for [etime(%q<value>)];@attach %!/INC`MSG`CHAN=Granted %q<t1name> Speaker authority on %q<channel> for [etime(%q<value>)];&D`SPEAKER`%q<mog> %q<t1>=add(secs(),%q<value>)}

&INC`CHANNEL`MOGCONF [u(cobj,channel)]=@attach %!/INC`CHANNEL`TARGET;@check cor(u(isadmin,%#),testlock(clock(%q<channel>/Mod),%#))=@attach %!/INC`MSG=ERROR: Permission denied.;@stop not(strmatch(parent(u(setr,mog,cmogrifier(%q<channel>))),num(u(cobj,mop))))=@attach %!/INC`MSG=ERROR: Channel is not initialized. Please use +channel/init %q<channel>;@select/inline gt(strlen(before(%1,/)),0)=0,{@attach %!/INC`CHANNEL`MOGCONF`SHOWCONFIG},1,{@attach %!/INC`PARTIAL=before(%1,/),v(MOGTYPES),|,mogrifier,mogrifier;@select/inline gt(strlen(after(%1,/)),0)=1,{@attach %!/INC`CHANNEL`MOGCONF`SUBCONFIG},0,{@attach %!/INC`CHANNEL`MOGCONF`MAINCONFIG}}

&INC`CHANNEL`MOGCONF`MAINCONFIG [u(cobj,channel)]=@select/inline strlen(%1)=0,{@attach %!/INC`VERIFY={ansi(hr,WARNING:) This will clear the Channel %q<channel> %q<mogrifier> Mogrifier List, which is currently [u(setr,msg,'[get(%q<mog>/MOGUSE`%q<mogrifier>)]'[if(not(hasattr(%q<mog>/MOGUSE`%q<mogrifier>)),%b(inherited))].)] Are you sure? Enter the same command again within ten seconds to continue!},CLEAR %q<mog> %q<mogrifier>;&MOGCONF`%q<mogrifier> %q<mog>;@attach %!/INC`MSG=You clear Channel %q<channel>'s Mogrifier list.;@attach %!/INC`MSG`CHAN=cleared Channel '%q<channel>''s Mogrifier list\, which was %q<msg>},{@check lmath(min,iter(lcstr(%2),match(lcstr(get(%q<mog>/MOGORDER`%q<mogrifier>)),%i0)))=@attach %!/INC`MSG=ERROR: One or more of the entered mogrifier types was not recognized.;th u(setq,oldmog,get(%q<mog>/MOGUSE`%q<mogrifier>),inherited,hasattr(%q<mog>/MOGUSE`%q<mogrifier>));&MOGUSE`%q<mogrifier> %q<mog>=u(setr,newmog,filterbool(#lambda/match(lcstr(%2),\%0),lcstr(get(%q<mog>/MOGORDER`%q<mogrifier>))));@attach %!/INC`MSG=You set Channel %q<channel>'s Mogrifier list to: %q<newmog>;@attach %!/INC`MSG`CHAN=set Channel '%q<channel>''s Mogrifier list\, which was '%q<oldmog>'[if(not(%q<inherited>),%b(inherited))]\, to: %q<newmog>}

&INC`CHANNEL`MOGCONF`SUBCONFIG [u(cobj,channel)]=@attach %!/INC`PARTIAL=after(%1,/),v(MOGTYPES`%q<mogrifier>),|,parameter,parameter;@select/inline strlen(%1)=0,{&MOGCONF`%q<mogrifier>`%q<parameter> %q<mog>;@attach %!/INC`MSG=You cleared Channel %q<channel>'s %q<mogrifier> Mogrifier %q<parameter> Setting.},{@attach %!/INC`CHANNEL`MOGCONF`%q<mogrifier>`%q<parameter>;&MOGCONF`%q<mogrifier>`%q<parameter> %q<mog>=%q<entry>;@attach %!/INC`MSG=You set Channel %q<channel>'s %q<mogrifier> Mogrifier %q<parameter> Setting to: %q<entry>};@attach %!/INC`MSG`CHAN=[if(strlen(%2),set,cleared)] the %q<channel> Channel's %q<mogrifier> Mogrifier %q<parameter> Setting[if(strlen(%2),%bto %2!,.)]

&INC`CHANNEL`MOGCONF`TITLE`TRIM [u(cobj,channel)]=@check cand(isint(%2),gte(%2,0))=@attach %!/INC`MSG=ERROR: Trim length Mogrifier setting must be a whole number 0 or greater.;th u(setq,entry,abs(%2))
&INC`CHANNEL`MOGCONF`TITLE`STAFFTAG [u(cobj,channel)]=@check cand(isint(%2),gte(%2,0))=@attach %!/INC`MSG=ERROR: Stafftag Mogrifier setting must be boolean 1 or 0.;th u(setq,entry,t(%2))

&MOGTYPES [u(cobj,channel)]=BLOCK|CHANNAME|TITLE|PLAYERNAME|SPEECHTEXT|MESSAGE
&MOGTYPES`BLOCK [u(cobj,channel)]=BADWORDS
&MOGTYPES`CHANNAME [u(cobj,channel)]=
&MOGTYPES`TITLE [u(cobj,channel)]=TRIM|STAFFTAG|RANKTAG
&MOGTYPES`PLAYERNAME [u(cobj,channel)]=
&MOGTYPES`SPEECHTEXT [u(cobj,channel)]=
&MOGTYPES`MESSAGE [u(cobj,channel)]=

&INC`CHANNEL`MOGCONF`SHOWCONFIG [u(cobj,channel)]=@pemit %#=u(header,%q<channel>: Mogrifiers);@dolist/inline/delimit | [v(MOGTYPES)]={@pemit %#=u(separator,u(capnames,%i0));@pemit %#=Order: [get(%q<mog>/MOGORDER`%i0)] [if(not(hasattr(%q<mog>/MOGORDER`%i0)),(inherited))]%RIn Use: [get(%q<mog>/MOGUSE`%i0)] [if(not(hasattr(%q<mog>/MOGUSE`%i0)),(inherited))];@pemit %#=* OPTIONS *;@pemit %#=iter(v(MOGTYPES`%i0),%i0: [get(%q<mog>/MOGCONF`%i1`%i0)] [if(not(hasattr(%q<mog>/MOGCONF`%i1`%i0)),(inherited))],|,%R)};@pemit %#=u(header)

&INC`CHANNEL`STAFFTAG [u(cobj,channel)]=@attach %!/INC`PARTIAL=%0,stripansi(objeval(%#,channels(|))),|,channel,channel;@stop not(strmatch(parent(u(setr,mog,cmogrifier(%q<channel>))),num(u(cobj,mop))))=@attach %!/INC`MSG=ERROR: Channel is not initialized. Please use +channel/init %q<channel>;@select/inline t(match(get(%q<mog>/VAR`STAFFTAG),%:))=1,{&VAR`STAFFTAG %q<mog>=setdiff(get(%q<mog>/VAR`STAFFTAG),%:);@attach %!/INC`MSG=You will no longer have a Staff tag on %q<channel>},0,{&VAR`STAFFTAG %q<mog>=setunion(get(%q<mog>/VAR`STAFFTAG),%:);@attach %!/INC`MSG=You will now have a Staff tag on %q<channel>}

&INC`CHANNEL`CODENAME [u(cobj,channel)]=@attach %!/INC`PARTIAL=%0,stripansi(objeval(%#,channels(|))),|,channel,channel;@stop not(strmatch(parent(u(setr,mog,cmogrifier(%q<channel>))),num(u(cobj,mop))))=@attach %!/INC`MSG=ERROR: Channel is not initialized. Staff must use +channel/init %q<channel>;@check match(get(%q<mog>/MOGUSE`PLAYERNAME),codename)=@attach %!/INC`MSG=ERROR: This channel does not use codenames.;@check strlen(%2)=@attach %!/INC`MSG=ERROR: No codename entered!;@stop gt(strlen(%2),26)=@attach %!/INC`MSG=ERROR: Codenames must be 26 characters or less.;@stop u(charsearch,%R %T,%2)=@attach %!/INC`MSG=ERROR: No newlines or tabs please!;&CODENAME`%# %q<mog>=%2;@attach %!/INC`MSG=Codename set to %2!

@@ MUZZLE SECTION
&CMD`+MUZZLE [u(cobj,channel)]=$^(?s)(?\:\+)?(muzzle|unmuzzle)(?\:/(\S+)?)?(?\: +(.+?))?(?\:/(.+?))?(?\:=(.*))?$:th u(setq,sysname,MUZZLE);@attach %!/INC`GETSWITCH=%2;@attach %!/INC`%1`[strfirstof(%q<switch>,MAIN)]=%3,%4,%5
@set [u(cobj,channel)]/CMD`+MUZZLE=regexp

&SWITCHES`MUZZLE`ADMIN [u(cobj,channel)]=ACCALL|ACC|ALL

&INC`VALMUZCHAN [u(cobj,channel)]=@attach %!/INC`PARTIAL=%0,objeval(%#,channels(|)),|,channel,channel;@stop not(strmatch(parent(u(setr,mog,cmogrifier(%q<channel>))),num(u(cobj,mop))))=@attach %!/INC`MSG=ERROR: Channel is not initialized. Please use +channel/init %q<channel>;@check cor(u(isadmin,%#),elock(%q<mog>/Muzzle,%#))=@attach %!/INC`MSG=ERROR: Permission denied.

&INC`VALID`CHARCHAN [u(cobj,channel)]=@attach %!/INC`CHECKPC=%0,1;@stop u(isadmin,%q<t1>)=@attach %!/INC`MSG=ERROR: %q<t1name> is staff.;@attach %!/INC`VALMUZCHAN=%1

&INC`MUZZLE`MAIN [u(cobj,channel)]=@select/inline strlen(%0)=0,{@attach %!/INC`MUZZLE`DISPLAY},{@attach %!/INC`MUZZLE`CHARCHAN}

&INC`MUZZLE`DISPLAY [u(cobj,channel)]=@select/inline 1=u(isadmin,%#),{@attach %!/INC`MUZZLE`DISPLAY`ADMIN},{@attach %!/INC`MUZZLE`DISPLAY`PLAYER}

&INC`MUZZLE`DISPLAY`PLAYER [u(cobj,channel)]=@pemit %#=u(header,Your Muzzles);th u(setq,accid,u(accid,%#));@select/inline cand(u(setr,until,get(u(cobj,muzzle)/ACCALL`%q<accid>)),gt(%q<until>,secs()))=1,{@attach %!/INC`MSG=You are Global Account Muzzled until [u(fancytime,%q<until>,%#)]};@select/inline cand(u(setr,until,get(u(cobj,muzzle)/ALL`%#)),gt(%q<until>,secs()))=1,{@attach %!/INC`MSG=You are Global Muzzled until [u(fancytime,%q<until>,%#)]};@select/inline strlen(u(setr,accs,lattr(u(cobj,muzzle)/ACC`%q<accid>`*)))=>0,{@attach %!/INC`MSG=You are Account Muzzled on [itemize(iter(%q<accs>,get(u(cobj,muzzle)/%i0`CHANNAME) until [u(fancytime,get(u(cobj,muzzle)/%i0`BY),%#)],%b,|),|,and,\,)]};@select/inline strlen(u(setr,chars,lattr(u(cobj,muzzle)/CHAR`%#`*)))=>0,{@attach %!/INC`MSG=You are Muzzled on [itemize(iter(%q<chars>,get(u(cobj,muzzle)/%i0`CHANNAME) until [u(fancytime,get(u(cobj,muzzle)/%i0`BY),%#)],%b,|),|,and,\,)]};@select/inline words(u(setr,managed,filterbool(#lambda/elock(\%0/Muzzle,%#),iter(channels(|),cmogrifier(%i0),|,%b),%b,%b)))=>0,{@pemit %#=u(Header,Managed Channel Muzzles);@pemit %#=ansi(u(color,%#,CHANNELS,COLUMN_NAMES),align(18 18 18 20,Channel,Name,Until,SetBy));@dolist/inline iter(%q<managed>,lattr(u(cobj,muzzle)/CHAR`*`%i0))={@pemit %#=align(18 18 18 20,get(u(cobj,muzzle)/%i0`CHANNAME),u(getmoniker,elements(%i0,2,`,`)),u(fancytime,get(u(cobj,muzzle)/%i0),%#),u(getmoniker,get(u(cobj,muzzle)/%i0`BY)))}};@pemit %#=u(subheader)

&INC`MUZZLE`DISPLAY`ADMIN [u(cobj,channel)]=@pemit %#=u(header,Channel Muzzles);@pemit %#=ansi(u(color,%#,CHANNELS,COLUMN_NAMES),align(20 16 21 20,Channel,Name,Until,SetBy));@dolist/inline lattr(u(cobj,muzzle)/CHAR`*`*)={@pemit %#=align(20 16 21 20,get(u(cobj,muzzle)/%i0`CHANNAME),u(getmoniker,elements(%i0,2,`)),u(fancytime,get(u(cobj,muzzle)/%i0),%#),u(getmoniker,get(u(cobj,muzzle)/%i0`BY)))};@pemit %#=u(subheader,Account Muzzles);@pemit %#=ansi(u(color,%#,CHANNELS,COLUMN_NAMES),align(20 20 10 20,Channel,Account,Until,SetBy));@dolist/inline lattr(u(cobj,muzzle)/ACC`*`*)={@pemit %#=align(20 20 10 20,get(u(cobj,muzzle)/%i0`CHANNAME),u(pueblize,name(elements(%i0,2,`,`)),+account [last(name(get(u(cobj,muzzle)/[elements(%i0,1 2,`,`)])))]),u(fancytime,get(u(cobj,muzzle)/%i0),%#),u(getmoniker,get(u(cobj,muzzle)/%i0`BY)))};@pemit %#=u(subheader,Global Muzzles);@pemit %#=ansi(u(color,%#,CHANNELS,COLUMN_NAMES),align(20 10 20,Name,Until,SetBy));@dolist/inline lattr(u(cobj,muzzle)/ALL`*)={@pemit %#=align(20 10 20,u(getmoniker,get(u(cobj,muzzle)/[elements(%i0,2,`)])),u(fancytime,get(u(cobj,muzzle)/%i0),%#),u(getmoniker,get(u(cobj,muzzle)/%i0`BY)))};@pemit %#=u(subheader,Global Account Muzzles);@pemit %#=ansi(u(color,%#,CHANNELS,COLUMN_NAMES),align(20 10 20,Account,Until,SetBy));@dolist/inline lattr(u(cobj,muzzle)/ACCALL`*)={@pemit %#=align(20 10 20,u(pueblize,name(get(u(cobj,muzzle)/[elements(%i0,2,`)])),+account [last(name(get(u(cobj,muzzle)/[elements(%i0,2,`)])))]),u(fancytime,get(u(cobj,muzzle)/%i0),%#),u(getmoniker,get(u(cobj,muzzle)/%i0`BY)))};@pemit %#=u(subheader,Expired Muzzles Auto-Clean)

&INC`MUZZLE`CHARCHAN [u(cobj,channel)]=@attach %!/INC`VALID`CHARCHAN;@attach %!/INC`VALID`DURATION=%2;&CHAR`%q<t1>`%q<mog> [u(cobj,muzzle)]=add(secs(),%q<value>);&CHAR`%q<t1>`%q<mog>`ON [u(cobj,muzzle)]=secs();&CHAR`%q<t1>`%q<mog>`BY [u(cobj,muzzle)]=%:;&CHAR`%q<t1>`%q<mog>`CHANNAME [u(cobj,muzzle)]=%q<channel>;@attach %!/INC`MSG=Muzzled %q<t1name> from %q<channel> for [etime(%q<value>)] - until [u(fancytime,add(secs(),%q<value>),%#)].;@attach %!/INC`MSG`NOTICE=You were Muzzled from %q<channel> for [etime(%q<value>)] - until [u(fancytime,add(secs(),%q<value>),%q<t1>)].,%q<t1>;@attach %!/INC`MSG`CHAN=Muzzled %q<t1name> from %q<channel> for [etime(%q<value>)].

&INC`MUZZLE`ALL [u(cobj,channel)]=@attach %!/INC`CHECKPC=%0,1;@stop u(isadmin,%q<t1>)=@attach %!/INC`MSG=ERROR: %q<t1name> is staff.;@attach %!/INC`VALID`DURATION=%2;&ALL`%q<t1> [u(cobj,muzzle)]=add(secs(),%q<value>);&ALL`%q<t1>`ON [u(cobj,muzzle)]=secs();&ALL`%q<t1>`BY [u(cobj,muzzle)]=%:;@attach %!/INC`MSG=Muzzled %q<t1name> from [ansi(hr,ALL CHANNELS)] for [etime(%q<value>)] - until [u(fancytime,add(secs(),%q<value>),%#)].;@attach %!/INC`MSG`NOTICE=You were Muzzled from [ansi(hr,ALL CHANNELS)] for [etime(%q<value>)] - until [u(fancytime,add(secs(),%q<value>),%q<t1>)].,%q<t1>;@attach %!/INC`MSG`CHAN=Muzzled %q<t1name> from [ansi(hr,ALL CHANNELS)] for [etime(%q<value>)].

&INC`MUZZLE`ACC [u(cobj,channel)]=@attach %!/INC`VALID`CHARCHAN;@attach %!/INC`VALID`DURATION=%2;@check isdbref(u(setr,accid,%q<t1acc>))=@attach %!/INC`MSG=ERROR: %q<t1name> is not bound to an account.;&ACC`%q<accid>`%q<mog> [u(cobj,muzzle)]=add(secs(),%q<value>);&ACC`%q<accid>`%q<mog>`ON [u(cobj,muzzle)]=secs();&ACC`%q<accid>`%q<mog>`BY [u(cobj,muzzle)]=%:;&ACC`%q<accid>`%q<mog>`CHANNAME [u(cobj,muzzle)]=%q<channel>;@attach %!/INC`MSG=Muzzled [u(setr,target,[name(%q<accid>)] \([u(itemize,iter(u(filter,ISOBJID,get(%q<accid>/CHARACTERS)),name(%i0),%b,|),|,and,\,)]\))] from %q<channel> for [etime(%q<value>)] - until [u(fancytime,add(secs(),%q<value>),%#)].;@attach %!/INC`MSG`NOTICE=You were Account Muzzled from %q<channel> for [etime(%q<value>)] - until [u(fancytime,add(secs(),%q<value>),%q<t1>)].,u(alts,%q<t1>);@attach %!/INC`MSG`CHAN=Muzzled %q<target> from %q<channel> for [etime(%q<value>)].

&INC`MUZZLE`ACCALL [u(cobj,channel)]=@attach %!/INC`CHECKPC=%0,1;@stop u(isadmin,%q<t1>)=@attach %!/INC`MSG=ERROR: %q<t1name> is staff.;@check isdbref(u(setr,accid,%q<t1acc>))=@attach %!/INC`MSG=ERROR: %q<t1name> is not bound to an account.;@attach %!/INC`VALID`DURATION=%2;&ACCALL`%q<accid> [u(cobj,muzzle)]=add(secs(),%q<value>);&ACCALL`%q<accid>`ON [u(cobj,muzzle)]=secs();&ACCALL`%q<accid>`BY [u(cobj,muzzle)]=%:;@attach %!/INC`MSG=Muzzled [u(setr,target,[name(%q<accid>)] \([u(itemize,iter(u(filter,ISOBJID,get(%q<accid>/CHARACTERS)),name(%i0),%b,|),|,and,\,)]\))] from [ansi(hr,ALL CHANNELS)] for [etime(%q<value>)] - until [u(fancytime,add(secs(),%q<value>),%#)].;@attach %!/INC`MSG`NOTICE=You were Account Muzzled from [ansi(hr,ALL CHANNELS)] for [etime(%q<value>)] - until [u(fancytime,add(secs(),%q<value>),%q<t1>)].,u(alts,%q<t1>);@attach %!/INC`MSG`CHAN=Muzzled %q<target> from [ansi(hr,ALL CHANNELS)] for [etime(%q<value>)].


@@ Unmuzzle
&INC`UNMUZZLE`MAIN [u(cobj,channel)]=@attach %!/INC`VALID`CHARCHAN;@check u(setr,until,get(u(cobj,muzzle)/CHAR`%q<t1>`%q<mog>))=@attach %!/INC`MSG=ERROR: %q<t1name> is not muzzled on %q<channel>.;@check cor(u(isadmin,%#),not(u(isadmin,get(u(cobj,muzzle)/CHAR`%q<t1>`%q<mog>`BY))))=@attach %!/INC`MSG=ERROR: That muzzle was set by an admin. Only admin may remove it.;@attach %!/WIPE=u(cobj,muzzle),CHAR`%q<t1>`%q<mog>;@attach %!/INC`MSG=Unmuzzled %q<t1name> from %q<channel>.;@attach %!/INC`MSG`NOTICE=Your %q<channel> Muzzle was released.,%q<t1>;@attach %!/INC`MSG`CHAN=Unmuzzled %q<t1name> from %q<channel>.

&INC`UNMUZZLE`ALL [u(cobj,channel)]=@attach %!/INC`CHECKPC=%0,1;&ALL`%q<t1> [u(cobj,muzzle)]=add(secs(),%q<value>);@check u(setr,until,get(u(cobj,muzzle)/ALL`%q<t1>))=@attach %!/INC`MSG=ERROR: %q<t1name> is not Global Muzzled.;@attach %!/WIPE=u(cobj,muzzle),ALL`%q<t1>;@attach %!/INC`MSG=Unmuzzled %q<t1name> from [ansi(hr,ALL CHANNELS)].;@attach %!/INC`MSG`NOTICE=Your Global Muzzle was released.,%q<t1>;@attach %!/INC`MSG`CHAN=Unmuzzled %q<t1name> from [ansi(hr,ALL CHANNELS)].

&INC`UNMUZZLE`ACC [u(cobj,channel)]=@attach %!/INC`VALID`CHARCHAN;@check isdbref(u(setr,accid,%q<t1acc>))=@attach %!/INC`MSG=ERROR: %q<t1name> is not bound to an account.;@check u(setr,until,get(u(cobj,muzzle)/ACC`%q<accid>`%q<mog>))=@attach %!/INC`MSG=ERROR: %q<t1name> is not Account Muzzled on %q<channel>.;@attach %!/WIPE=u(cobj,muzzle),ACC`%q<accid>`%q<mog>;@attach %!/INC`MSG=Unmuzzled [u(setr,target,[name(%q<accid>)] \([u(itemize,iter(u(filter,ISOBJID,get(%q<accid>/CHARACTERS)),name(%i0),%b,|),|,and,\,)]\))] from %q<channel>.;@attach %!/INC`MSG`NOTICE=Your %q<channel> Account Muzzle was released.,u(alts,%q<t1>);@attach %!/INC`MSG`CHAN=Unmuzzled %q<target> from %q<channel>.

&INC`UNMUZZLE`ACCALL [u(cobj,channel)]=@attach %!/INC`CHECKPC=%0,1;@check isdbref(u(setr,accid,%q<t1acc>))=@attach %!/INC`MSG=ERROR: %q<t1name> is not bound to an account.;@check u(setr,until,get(u(cobj,muzzle)/ACCALL`%q<accid>))=@attach %!/INC`MSG=ERROR: %q<t1name> is not Account Muzzled on %q<channel>.;@attach %!/WIPE=u(cobj,muzzle),ACCALL`%q<accid>;@attach %!/INC`MSG=Global Unmuzzled [u(setr,target,[name(%q<accid>)] \([u(itemize,iter(u(filter,ISOBJID,get(%q<accid>/CHARACTERS)),name(%i0),%b,|),|,and,\,)]\))] from [ansi(hr,ALL CHANNELS)].;@attach %!/INC`MSG`NOTICE=Your Account Muzzled from [ansi(hr,ALL CHANNELS)] was released.,u(alts,%q<t1>);@attach %!/INC`MSG`CHAN=Unmuzzled %q<target> from [ansi(hr,ALL CHANNELS)].


@@ +clock section
&CMD`+CLOCK [u(cobj,channel)]=$^(?\:\+)?(?\:chanlock|clock)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:th u(setq,sysname,CLOCK);@attach %!/INC`GETSWITCH=%1;@attach %!/INC`CLOCK=%2,%3
@set [u(cobj,channel)]/CMD`+CLOCK=regexp

&SWITCHES`CLOCK`PLAYER [u(cobj,channel)]=VIEW|UNLOCK
&SWITCHES`CLOCK`ADMIN [u(cobj,channel)]=

&INC`CLOCK [u(cobj,channel)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: Channel empty.;@attach %!/INC`PARTIAL=%0,objeval(%#,channels(|)),|,channel,channel;@stop not(strmatch(parent(u(setr,mog,cmogrifier(%q<channel>))),num(u(cobj,mop))))=@attach %!/INC`MSG=ERROR: Channel is not initialized. Please use +channel/init %q<channel>;@select/inline %q<switch>=VIEW,{@attach %!/INC`CLOCK`VIEW},{@check cor(isdbref(testlock(clock(%q<channel>/mod),%#)),u(iswizard,%#))=@attach %!/INC`MSG=ERROR: Permission Denied for %q<channel>.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Lock to what?;@check u(lmin,iter(u(setr,value,iter(%1,u(u(cobj,group)/FUN`FINDGROUP,%i0,%:),|,%b)),isdbref(%i0)))=@attach %!/INC`MSG=ERROR: One or more Group names did not Validate. Please try again.;@attach %!/INC`CLOCK`AUTOSET=%q<value>;@attach %!/INC`MSG=Channel %q<channel> Locked to: [if(strlen(%1),iter(%q<value>,u(%i0/GET`NAME),%b,\,%b),Nothing!)];@attach %!/INC`MSG`CHAN=Locked Channel %q<channel> to: [if(strlen(%1),iter(%q<value>,u(%i0/GET`NAME),%b,\,%b),Nothing!)]}

&INC`CLOCK`VIEW [u(cobj,channel)]=@pemit %#=u(header,Channel Locks - %q<channel>);th u(setq,mog,cmogrifier(stripansi(%q<channel>)));@dolist/inline SEE JOIN SPEAK HIDE MOD MUZZLE={@pemit %#=align(8 69,%i0,switch(%i0,muzzle,lock(%q<mog>/muzzle),clock(%q<channel>/%i0)))};@pemit %#=u(separator,Dbrefs as Names);@dolist/inline SEE JOIN SPEAK HIDE MOD MUZZLE={@pemit %#=align(8 69,%i0,regeditalli(switch(%i0,muzzle,lock(%q<mog>/muzzle),clock(%q<channel>/%i0)),(#\\d+),name($0)))};@pemit %#=u(subheader)

&INC`CLOCK`AUTOSET [u(cobj,channel)]=@clock/see %q<channel>=if(strlen(%0),iter(%0,V`GROUP`[get(%i0/D`ID)]:<=9001,%B,|)|V`ADMIN:>0|FLAG^ROYALTY|FLAG^WIZARD));@clock/join %q<channel>=if(strlen(%0),iter(%0,V`GROUP`[get(%i0/D`ID)]:<=9001,%B,|)|V`ADMIN:>0|FLAG^ROYALTY|FLAG^WIZARD));@clock/speak %q<channel>=if(strlen(%0),iter(%0,V`GROUP`[get(%i0/D`ID)]:<=9001,%B,|)|V`ADMIN:>0|FLAG^ROYALTY|FLAG^WIZARD));@clock/hide %q<channel>=if(strlen(%0),iter(%0,V`GROUP`[get(%i0/D`ID)]:<=9001,%B,|)|V`ADMIN:>0|FLAG^ROYALTY|FLAG^WIZARD));@lock/user:muzzle %q<mog>=if(strlen(%0),iter(%0,V`GROUP`[get(%i0/D`ID)]`PERMISSIONS`MODERATE:>0,%B,|)|V`ADMIN:>0|FLAG^ROYALTY|FLAG^WIZARD));

&INC`CLOCK`UNLOCK [u(cobj,channel)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: Channel empty.;@attach %!/INC`PARTIAL=%0,objeval(%#,channels(|)),|,channel,channel;@stop not(strmatch(parent(u(setr,mog,cmogrifier(%q<channel>))),num(u(cobj,mop))))=@attach %!/INC`MSG=ERROR: Channel is not initialized. Please use +channel/init %q<channel>;@check cor(isdbref(testlock(clock(%q<channel>/mod),%#)),u(iswizard,%#))=@attach %!/INC`MSG=ERROR: Permission Denied for %q<channel>.;@clock/join %q<channel>;@clock/speak %q<channel>;@clock/see %q<channel>;@clock/hide %q<channel>;@clock/mod %q<channel>=FLAG^WIZARD|FLAG^ROYALTY|V`ADMIN:>0;@attach %!/INC`MSG=Channel %q<channel> Locks reset to defaults (unlocked!);@attach %!/INC`MSG`CHAN=Un-Locked Channel %q<channel> to default locks! (public access)

&STARTUP [u(cobj,channel)]=@hook/ignore @channel=%!,HOOK`IGNORECHECK;@trigger %!/LOOP`CLEANMUZZLE;@trigger %!/LOOP`CLEANHASH;@hook/override/inline HUH_COMMAND=%!,CMD`COM
&HOOK`IGNORECHECK [u(cobj,channel)]=if(cand(cor(strmatch(first(after(%u,/)),a*),strmatch(first(after(%u,/)),ren*)),hastype(%#,PLAYER)),0[nspemit(%#,u(MSGHEAD,u(SYSTEm`NAME)) ERROR: Please use +channel for this purpose!)],1)

&LOOP`CLEANMUZZLE [u(cobj,channel)]=@dolist/inline setunion(lattr(u(cobj,muzzle)/ALL`*),setunion(lattr(u(cobj,muzzle)/CHAR`*`*),setunion(lattr(u(cobj,muzzle)/ACCALL`*),lattr(u(cobj,muzzle)/ACC`*`*))))={@select/inline gt(get(u(cobj,muzzle)/%i0),secs())=0,{@attach %!/WIPE=u(cobj,muzzle),%i0}};@wait u(conf,muzzle_interval)=@trigger %!/LOOP`CLEANMUZZLE

&CONFIG`MUZZLE_INTERVAL [u(cobj,channel)]=Seconds between checks for cleaning up expired muzzles. Not very critical. Run every 12 hours or so on. This just prevents database bloat.
&CONFIG`MUZZLE_INTERVAL`DEFAULT [u(cobj,channel)]=43200
&CONFIG`MUZZLE_INTERVAL`VALID [u(cobj,channel)]=DURATION

&CONFIG`STAFFTAG [u(cobj,channel)]=Color to use for Staff Tag on channels.
&CONFIG`STAFFTAG`DEFAULT [u(cobj,channel)]=hR
&CONFIG`STAFFTAG`VALID [u(Cobj,channel)]=COLOR

&CONFIG`OPTIONS [u(cobj,channel)]=DEFAULT_PRIVS|MUZZLE_INTERVAL|STAFFTAG

&LOOP`CLEANHASH [u(cobj,channel)]=@dolist children(u(cobj,mop))={@dolist/inline filterbool(#lambda/gte(sub(secs(),get(%i0/\%0`TIMESTAMP)),300),lattr(%i0/HASH`*))=@attach %!/WIPE=%i1,%i0};@wait 300=@trigger %!/LOOP`CLEANHASH

@@ Mogrify and CDB section
@lock/user:muzzle u(cobj,mop)=FLAG^ROYALTY|FLAG^WIZARD
@lset u(cobj,mop)/muzzle=v
@lset u(cobj,mop)/muzzle=!no_inherit

&MOGRIFY`MESSAGE [u(cobj,mop)]=localize(null(iter(v(MOGUSE`MESSAGE),u(setr,message,u(FUN`MESSAGE`%i0,strfirstof(%q<message>,%0)))))[strfirstof(%q<message>,%0)])
&MOGORDER`MESSAGE [u(cobj,mop)]=markup
&MOGUSE`MESSAGE [u(cobj,mop)]=markup

&MOGRIFY`PLAYERNAME [u(cobj,mop)]=null(iter(v(MOGUSE`PLAYERNAME),u(setr,playname,u(FUN`PLAYERNAME`%i0,strfirstof(%q<playname>,%0),%1,%2,%3,%4,%5))))[strfirstof(%q<playname>,%0)]
&MOGORDER`PLAYERNAME [u(cobj,mop)]=
&MOGUSE`PLAYERNAME [u(cobj,mop)]=

&MOGRIFY`TITLE [u(cobj,mop)]=null(iter(v(MOGUSE`TITLE),u(setr,title,u(FUN`TITLE`%i0,strfirstof(%q<title>,%0),%1,%2,%3,%4,%5))))[strfirstof(%q<title>,%0)]
&MOGORDER`TITLE [u(cobj,mop)]=noansi trim stafftag fachead ranktag speaker
&MOGUSE`TITLE [u(cobj,mop)]=trim stafftag fachead ranktag speaker

&FUN`MESSAGE`MARKUP [u(cobj,mop)]=%0[null(attrib_set(%!/[setr(attr,HASH`[digest(md5,%0)])],u(markup,%0,u(lwhoid)))[attrib_set(%!/%q<attr>`TIMESTAMP,secs())])]

&FUN`BLOCK`CODENAME [u(cobj,mop)]=if(cand(match(v(MOGUSE`PLAYERNAME),codename),not(strlen(v(CODENAME`%#)))),ansi(hr,ERROR:) This channel requires a codename. You can set one with [ansi(hw,+channel/codename %1=<codename>)])
&FUN`PLAYERNAME`CODENAME [u(cobj,mop)]=v(CODENAME`%#)
&FUN`TITLE`CODENAME [u(cobj,mop)]=(%5)[if(strlen(%0),%b%0)]
&MOGCONF`TITLE`CODENAME [u(cobj,mop)]=0

&FUN`TITLE`STAFFTAG [u(cobj,mop)]=if(cand(v(MOGCONF`TITLE`STAFFTAG),match(v(VAR`STAFFTAG),%:),u(isadmin,%#)),\[[ansi(u(u(cobj,channel)/conf,STAFFTAG),Staff)]\][if(strlen(%0),%B%0)],%0)
&MOGCONF`TITLE`STAFFTAG [u(cobj,mop)]=1
&FUN`TITLE`NOANSI [u(cobj,mop)]=stripansi(%0)
&FUN`TITLE`TRIM [u(cobj,mop)]=trim(if(v(MOGCONF`TITLE`TRIM),left(%0,v(MOGCONF`TITLE`TRIM)),%0))
&MOGCONF`TITLE`TRIM [u(cobj,mop)]=0

&FUN`TITLE`RANKTAG [u(cobj,mop)]=if(cand(isdbref(u(setr,fac,v(MOGCONF`TITLE`RANKTAG))),strlen(u(setr,num,get(%#/D`GROUP`%q<fac>`RANK)))),\[%q<num>\][if(strlen(%0),%b%0)],if(strlen(%0),%0))
&INC`CHANNEL`MOGCONF`TITLE`RANKTAG [u(cobj,channel)]=@check isdbref(u(setr,entry,u(u(cobj,group)/FUN`FINDGROUP,%2)))=@attach %!/INC`MSG=ERROR: Ranktags must be pointed at DBREFs. Make sure it's a group DBref!

&FUN`TITLE`SPEAKER [u(cobj,mop)]=if(cand(v(MOGCONF`TITLE`SPEAKER),lt(secs(),get(%#/D`SPEAKER`%!))),ansi(h,\[[ansi(Bw,Speaker)]\])[if(strlen(%0),%B%0)],%0)
&MOGCONF`TITLE`SPEAKER [u(cobj,mop)]=1

&FUN`TITLE`FACHEAD [u(cobj,mop)]=if(cand(v(MOGCONF`TITLE`FACHEAD),match(v(VAR`FACHEAD),%:),elock(u(game_config,CHANNELS,FACHEAD_KEY)/Basic,%#)),\[[ansi(u(game_config,CHANNELS,FACHEAD_TAG),Fachead)]\][if(strlen(%0),%B%0)],%0)
&MOGCONF`TITLE`FACHEAD [u(cobj,mop)]=1

&MOGRIFY`BLOCK [u(cobj,mop)]=localize(null(iter(v(MOGUSE`BLOCK),if(strlen(u(setr,block,u(FUN`BLOCK`%i0,,%1,%2,%3,%4,%5))),ibreak())))%q<block>)
&MOGORDER`BLOCK [u(cobj,mop)]=allmuzzle allaccmuzzle muzzle accmuzzle nostaffspoof badwords codename
&MOGUSE`BLOCK [u(cobj,mop)]=allmuzzle allaccmuzzle muzzle accmuzzle nostaffspoof badwords codename

&FUN`BLOCK`ALLMUZZLE [u(cobj,mop)]=if(cand(u(setr,until,get(u(cobj,muzzle)/ALL`%#)),gt(%q<until>,secs())),u(msghead,u(SYSTEM`NAME)) You are Global Muzzled until [u(fancytime,%q<until>,%#)])

&FUN`BLOCK`ALLACCMUZZLE [u(cobj,mop)]=if(isdbref(u(setr,accid,u(accid,%#))),if(cand(u(setr,until,get(u(cobj,muzzle)/ALLACC`%q<accid>)),gt(%q<until>,secs())),u(msghead,u(SYSTEM`NAME)) You are Global Account Muzzled until [u(fancytime,%q<until>,%#)]))

&FUN`BLOCK`ACCMUZZLE [u(cobj,mop)]=if(isdbref(u(setr,accid,u(accid,%#))),if(cand(u(setr,until,get(u(cobj,muzzle)/ACC`%q<accid>`%!)),gt(%q<until>,secs())),u(msghead,u(SYSTEM`NAME)) You are Account Muzzled from this channel until [u(fancytime,%q<until>,%#)]))

&FUN`BLOCK`MUZZLE [u(cobj,mop)]=if(cand(u(setr,until,get(u(cobj,muzzle)/CHAR`%#`%!)),gt(%q<until>,secs())),u(msghead,u(SYSTEM`NAME)) You are Muzzled until [u(fancytime,%q<until>,%#)] from this channel.)

&FUN`BLOCK`NOSTAFFSPOOF [u(cobj,mop)]=switch(strmatch(%4,*\[Staff\]*)[u(isadmin,%#)],10,u(msghead,u(SYSTEM`NAME)) ERROR: You are not staff. Please remove the \[Staff\] from your channel title.)

&FUN`BLOCK`BADWORDS [u(cobj,mop)]=if(regmatchi(%0,%\b%([v(MOGCONF`BLOCK`BADWORDS)]%)%\b,1:x),u(msghead,u(SYSTEM`NAME)) Your message was blocked by the bad words filter because it contains the following: %qx)
&MOGCONF`BLOCK`BADWORDS [u(cobj,mop)]=loli|lolicon|lolicons

@@ COMMUNICATIONS - CHANNELS
&HLP`CHANNELS [u(cobj,channel)]=PennMUSH has a rich built-in channel system. Channels are 'global' - anything said on them is heard by anyone else on the channel\, no matter where they are. This game uses a softcoded add-on called +channel so some commands are hardcoded\, others are softcoded. Hardcoded begin with @%R[ansi(hc,See Also:)] [u(pueblize,help @channel)], [u(pueblize,help @chat)]%R[ansi(hc,+Channel Aliases:)] chan, +chan, channel%R%R[ansi(hc,Managing Channels)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+channel)] - List visible channels. Simpler version of [ansi(h,@chan/list)]%R[ansi(h,+channel <channel>)] - Shows info about a channel.%R[ansi(h,@chan/on <channel>)] - Join a channel.%R[ansi(h,@chan/off <channel>)] - leave a channel.%R[ansi(h,@chan/gag \[<channel>\])] - mute a channel. You won't hear messages. This resets on logoff. Leaving <channel> unspecified will mute ALL channels.%R[ansi(h,@chan/ungag \[<channel>\])] - Undoes a gag. Leaving <channel> unspecified unmutes all gagged channels.%R[ansi(h,@chan/who <name>)] - Show who's listening to a channel. Use +channel <name> for channels that use CODENAMES instead.%R[ansi(h,@chan/title <channel>=<title>)] - Puts a title before your name when using a channel. Set to nothing to clear it.)]%R%R[ansi(hc,Channel Messages)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+<name> <text>)] - speak on a channel. <name> supports partial matches! As an example: [ansi(h,+p Hi everyone!)] would send to the Public channel.%R[ansi(h,@chat <channel>=<message>)] - Alternate way to send messages to a channel.%R[ansi(h,@chan/recall <name>=<#>)] - Show a channel's recent messages. # is number of lines. If # is 0 you'll see ALL remembered lines - VERY SPAMMY!%R[ansi(h,+chan/recall <channel>)] - Shows messages on <channel> since your last logout\, as far back as the system records.)]
+help/add Communications/Channels=[u(cobj,channel)]/HLP`CHANNELS

&HLP`CHANNELS`LOCKS [u(cobj,channel)]=The [ansi(hc,+clock)] command handles channel locks.%R[ansi(hc,See Also:)] [u(pueblize,+help +key)], [u(pueblize,help @clock)]%R[ansi(hc,Aliases:)] +chanlock, clock, chanlock%R%R[ansi(hc,Locktypes)]%RLocktypes are covered in [u(pueblize,help @clock)] but for simplicity:%R[align(5 [sub(u(width,%#),6)],,[ansi(h,SEE)] - Who can see the channel.%R[ansi(h,JOIN)] - Who can join the channel.%R[ansi(h,SPEAK)] - Who can speak on the channel.%R[ansi(h,HIDE)] - Who can hide from a channel's @chan/who.%R[ansi(h,MOD)] - Who can modify the channel\, though not delete it.%R[ansi(h,MUZZLE)] - Special for use with +clock\, who can use +muzzle on the channel.)]%R%R[ansi(hc,General Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+clock/view <channel>)] - Shows locks for visible channels.)]%R%R[ansi(hc,Staff Commands)]%RThese commands may only be used by Staff or appointed moderators.%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+clock <channel>\[=<Key Types>\])] - Sets <channel>'s <locktype> to <Key Types> using the +key system. Setting to nothing unlocks. See\, Join\, \,Speak are set to membership \(basic lock\) while Hide and Muzzle are governed by Key moderators \(enter lock\). This works with groups too! Use @clock for anything more sophisticated.)]
+help/addsub Channels/Locks=[u(cobj,channel)]/HLP`CHANNELS`LOCKS

&HLP`CHANNELS`MODERATORS [u(cobj,channel)]=[ansi(hc,See Also:)] [u(pueblize,help ansi())], [u(pueblize,help @channel admin,help @channel admin)]%R%R[ansi(hc,Moderator Commands)]%RThese commands may only used by Storytellers or appointed channel moderators.%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+muzzle <player>/<channel>=<duration>)] - Restrict <player> from speaking on <channel> for <duration>. Duration uses stringsecs\(\) ([u(pueblize,help stringsecs())]) - Example duration: 5h 30m or 10d 2h.%R[ansi(hw,+muzzle)] - Show active Muzzles on channels you moderate or your own muzzles.%R[ansi(h,+unmuzzle <player>/<channel>)] - Releases a Muzzle before it's expired. Player moderators cannot release muzzles set by admin.)]%R%R[ansi(hc,Configuration Commands)]%RThese commands can only be used by Admin or appointed channel moderators.%R[align(5 [sub(u(width,%#),6)],,[ansi(h,@chan/desc <channel>=<text>)] - Sets a channel's description.)]
+help/addsub Channels/Moderators=[u(cobj,channel)]/HLP`CHANNELS`MODERATORS


&SHLP`CHANNELS [u(cobj,channel)]=[ansi(hc,Staff Commands)]%RThese commands may only be used by Staff.%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+channel/add <name>\[=<color>\])] - Creates a channel.%R[ansi(h,+channel/del <channel>)] - Deletes a channel.%R[ansi(h,+channel/rename <channel>=<newname>)] - Renames a channel. Change color by renaming to itself. Must color manually\, however. You MUST enclose the ansi\(\) call in square brackets!%R[ansi(h,+channel/init <channel>)] - Initializes a channel to default settings and creates a mogrifier for it if one does not exist. This is only necessary for channels not made using +channel/add.%R[ansi(h,+channel/stafftag <channel>)] - Enable your \[Staff\] tag for a channel.%R[ansi(h,+channel/speaker <channel>/<player>=<duration>)] - Grant a player a special \[Speaker\] tag for <duration>. Use duration 0 to revoke one early. Can be called with [ansi(h,+speaker <channel>/<player>=<duration>)])]%R%R[ansi(hc,Mogrifier Commands)]%RThese commands may only be used by Staff, and are for advanced users.%RFor more information, please see [u(pueblize,help mogrify)]%RThe MOGCONF system uses an individual modifier for each channel, created with /init and placed in the Channel Database object. Each is parented to the channel database object. These commands depend on this arrangement. New mogrifier features can be added by a coder very easily.%R%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+channel/mogconf <channel>)] - Displays the mogrifier options for a channel.%R[ansi(h,+channel/mogconf <channel>/<mogrifier>=<list>)] - change the list of mogrifiers in use by the channel.%R[ansi(h,+channel/mogconf <channel>/<mogrifier>/<option>=<value>)] - Changes a Mogrifier option for a Channel. Blank values clear the option.)]
+shelp/add Communications/Channels=[u(cobj,channel)]/SHLP`CHANNELS


&SHLP`MUZZLE [u(cobj,channel)]=[ansi(hc,See Also:)] [u(pueblize,help @channel admin)]%R%R[ansi(hc,Moderator Commands)]%RThese commands may only used by Admin or appointed channel moderators.%R[align(5 [sub(u(width,%#),6)],,[ansi(hw,+muzzle)] - Show all active Muzzles.%R[ansi(h,+muzzle <player>/<channel>=<duration>)] - Restrict <player> from speaking on <channel> for <duration>. Duration uses stringsecs\(\) ([u(pueblize,help stringsecs())]) - Example duration: 5h 30m or 10d 2h.%R[ansi(h,+muzzle/all <player>=<duration>)] - Restricts <player> from ALL channels for <duration>.%R[ansi(h,+muzzle/acc <player>/<channel>=<duration>)] - Restricts all of <player>'s alts from <channel> for <duration>.%R[ansi(h,+muzzle/accall <player>=<duration>)] - Restricts <player>'s account from ALL CHANNELS for <duration>.%R%RUse +unmuzzle in the same way - minus the =<duration> - to release a muzzle early.%R%RNote that muzzles expire the instant they are up and might display in +muzzle past their expiration. They are cleaned every interval defined in +gameconfig channels/interval.)]
+shelp/add Communications/+muzzle=[u(cobj,channel)]/SHLP`MUZZLE
